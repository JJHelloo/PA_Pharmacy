-- MySQL Script generated by MySQL Workbench
-- Tue Jan 25 20:55:50 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema PA_Pharmacy
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema PA_Pharmacy
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `PA_Pharmacy` DEFAULT CHARACTER SET utf8 ;
USE `PA_Pharmacy` ;

-- -----------------------------------------------------
-- Table `PA_Pharmacy`.`Patient`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PA_Pharmacy`.`Patient` (
  `PatientID` INT NOT NULL AUTO_INCREMENT,
  `SSN` VARCHAR(45) NULL,
  `Fname` VARCHAR(45) NOT NULL,
  `Lname` VARCHAR(45) NOT NULL,
  `Age` INT NOT NULL,
  `Address` VARCHAR(45) NOT NULL,
  `PrimaryDoc` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`PatientID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PA_Pharmacy`.`Doctor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PA_Pharmacy`.`Doctor` (
  `DoctorID` INT NOT NULL AUTO_INCREMENT,
  `SSN` VARCHAR(45) NULL,
  `Fname` VARCHAR(45) NOT NULL,
  `Lname` VARCHAR(45) NOT NULL,
  `Specialty` VARCHAR(45) NOT NULL,
  `YearsExp` INT NOT NULL,
  PRIMARY KEY (`DoctorID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PA_Pharmacy`.`Supplier`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PA_Pharmacy`.`Supplier` (
  `SupplierID` INT NOT NULL AUTO_INCREMENT,
  `SupplierName` VARCHAR(45) NOT NULL,
  `Phone` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`SupplierID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PA_Pharmacy`.`Drug`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PA_Pharmacy`.`Drug` (
  `DrugID` INT NOT NULL,
  `TradeName` VARCHAR(45) NOT NULL,
  `GenericName` VARCHAR(45) NOT NULL,
  `_SupplierID` INT NOT NULL,
  PRIMARY KEY (`DrugID`),
  INDEX `fk_Drug_Supplier1_idx` (`_SupplierID` ASC) VISIBLE,
  CONSTRAINT `fk_Drug_Supplier1`
    FOREIGN KEY (`_SupplierID`)
    REFERENCES `PA_Pharmacy`.`Supplier` (`SupplierID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PA_Pharmacy`.`RX`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PA_Pharmacy`.`RX` (
  `RxID` INT NOT NULL,
  `_DrugID` INT NOT NULL,
  `Quantity` INT NOT NULL,
  `DateIssued` DATE NOT NULL,
  `DateFilled` DATE NULL,
  PRIMARY KEY (`RxID`),
  INDEX `fk_RX_Drug1_idx` (`_DrugID` ASC) VISIBLE,
  CONSTRAINT `fk_RX_Drug1`
    FOREIGN KEY (`_DrugID`)
    REFERENCES `PA_Pharmacy`.`Drug` (`DrugID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PA_Pharmacy`.`Pharmacy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PA_Pharmacy`.`Pharmacy` (
  `PharmacyID` INT NOT NULL AUTO_INCREMENT,
  `PharmacyName` VARCHAR(45) NOT NULL,
  `Address` VARCHAR(45) NOT NULL,
  `PhoneNum` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`PharmacyID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PA_Pharmacy`.`DrugPrice`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PA_Pharmacy`.`DrugPrice` (
  `PriceID` INT NOT NULL AUTO_INCREMENT,
  `_DrugID` INT NOT NULL,
  `_PharmacyID` INT NOT NULL,
  `Price` DECIMAL(5,2) NOT NULL,
  PRIMARY KEY (`PriceID`),
  INDEX `fk_DrugPrice_Pharmacy1_idx` (`_PharmacyID` ASC) VISIBLE,
  INDEX `fk_DrugPrice_Drug1_idx` (`_DrugID` ASC) VISIBLE,
  CONSTRAINT `fk_DrugPrice_Pharmacy1`
    FOREIGN KEY (`_PharmacyID`)
    REFERENCES `PA_Pharmacy`.`Pharmacy` (`PharmacyID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_DrugPrice_Drug1`
    FOREIGN KEY (`_DrugID`)
    REFERENCES `PA_Pharmacy`.`Drug` (`DrugID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PA_Pharmacy`.`Supervisor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PA_Pharmacy`.`Supervisor` (
  `SupervisorID` INT NOT NULL AUTO_INCREMENT,
  `Fname` VARCHAR(45) NOT NULL,
  `Lname` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`SupervisorID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PA_Pharmacy`.`Contract`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PA_Pharmacy`.`Contract` (
  `ContractID` INT NOT NULL AUTO_INCREMENT,
  `_SupervisorID` INT NOT NULL,
  `_PharmacyID` INT NOT NULL,
  `_SupplierID` INT NOT NULL,
  `StartDate` DATE NOT NULL,
  `EndDate` DATE NOT NULL,
  `ContractTerms` MEDIUMTEXT NOT NULL,
  PRIMARY KEY (`ContractID`, `_PharmacyID`, `_SupplierID`),
  INDEX `fk_Contract_Pharmacy1_idx` (`_PharmacyID` ASC) VISIBLE,
  INDEX `fk_Contract_Supplier1_idx` (`_SupplierID` ASC) VISIBLE,
  INDEX `fk_Contract_Supervisor1_idx` (`_SupervisorID` ASC) VISIBLE,
  CONSTRAINT `fk_Contract_Pharmacy1`
    FOREIGN KEY (`_PharmacyID`)
    REFERENCES `PA_Pharmacy`.`Pharmacy` (`PharmacyID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Contract_Supplier1`
    FOREIGN KEY (`_SupplierID`)
    REFERENCES `PA_Pharmacy`.`Supplier` (`SupplierID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Contract_Supervisor1`
    FOREIGN KEY (`_SupervisorID`)
    REFERENCES `PA_Pharmacy`.`Supervisor` (`SupervisorID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PA_Pharmacy`.`Includes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PA_Pharmacy`.`Includes` (
  `_PatientID` INT NOT NULL,
  `_DoctorID` INT NOT NULL,
  `_RxID` INT NULL,
  PRIMARY KEY (`_PatientID`, `_DoctorID`),
  INDEX `fk_Patient_has_Doctor_Doctor1_idx` (`_DoctorID` ASC) VISIBLE,
  INDEX `fk_Patient_has_Doctor_Patient1_idx` (`_PatientID` ASC) VISIBLE,
  INDEX `fk_Patient_has_Doctor_RX1_idx` (`_RxID` ASC) VISIBLE,
  CONSTRAINT `fk_Patient_has_Doctor_Patient1`
    FOREIGN KEY (`_PatientID`)
    REFERENCES `PA_Pharmacy`.`Patient` (`PatientID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Patient_has_Doctor_Doctor1`
    FOREIGN KEY (`_DoctorID`)
    REFERENCES `PA_Pharmacy`.`Doctor` (`DoctorID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Patient_has_Doctor_RX1`
    FOREIGN KEY (`_RxID`)
    REFERENCES `PA_Pharmacy`.`RX` (`RxID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- -----------------------------------------------------
-- END CREATE TABLE SCRIPT
-- -----------------------------------------------------

-- -----------------------------------------------------
-- START SQL QUERIES
-- -----------------------------------------------------

-- How many patients have a prescription that has not been filled? display patientid, ssn, name, and datefilled.
SELECT patient.patientid,
       ssn,
       fname,
       lname,
       datefilled
FROM   patient
       JOIN includes
         ON includes._patientid = patient.patientid
       JOIN rx
         ON rx.rxid = includes._rxid
WHERE  datefilled IS NULL; 

-- How many patients received a specified drug from a specific suplier?
SELECT patient.patientid,
       patient.ssn,
       patient.fname,
       patient.lname
FROM   patient
       JOIN includes
         ON includes._patientid = patient.patientid
       JOIN rx
         ON rx.rxid = includes._rxid
       JOIN drug
         ON drug.drugid = rx._drugid
       JOIN supplier
         ON supplier.supplierid = drug._supplierid
WHERE  tradename = 'Tylenol'
       AND suppliername = 'AmerisourceBergen'; 
       
-- Display the quantity of drug given out for each drug. show drugid, tradename of the drug, and quantity filled.
SELECT drugid,
       tradename,
       Sum(quantity) AS quantity_filled
FROM   drug
       JOIN rx
         ON rx._drugid = drug.drugid
GROUP  BY drugid; 

-- Display patients who were prescribed the most expensive drug. Display the patients by last name, along with the drug TradeName and price.
SELECT p.lname     AS "Last Name",
       d.tradename AS "Drug Name",
       dp.price    AS "Price"
FROM   patient p
       JOIN includes i
         ON i._patientid = p.patientid
       JOIN rx
         ON i._rxid = rx.rxid
       JOIN drug d
         ON rx._drugid = d.drugid
       JOIN drugprice dp
         ON d.drugid = dp._drugid
HAVING Max(dp.price); 

-- Display current open contract terms (not expired), listing supervisors' last names for each contract and the Pharmacy they are contracted with. 
SELECT c.contractterms,
       s.lname,
       p.pharmacyname
FROM   contract c
       JOIN supervisor s
         ON c._supervisorid = s.supervisorid
       JOIN pharmacy p
         ON c._pharmacyid = p.pharmacyid
WHERE  c.enddate < Cast(CURRENT_TIMESTAMP AS DATE); 

-- -----------------------------------------------------
-- END SQL QUERIES
-- -----------------------------------------------------